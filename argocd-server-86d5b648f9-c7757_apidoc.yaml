apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/containerID: 6d7f9b76037ab06adbc34c0ee372299739d195f864b279917a4e4a7324c42f58
    cni.projectcalico.org/podIP: 172.21.126.210/32
    cni.projectcalico.org/podIPs: 172.21.126.210/32
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "k8s-pod-network",
          "ips": [
              "172.21.126.210"
          ],
          "default": true,
          "dns": {}
      }]
    openshift.io/scc: bcdr-scc
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2024-06-11T14:15:07Z"
  generateName: argocd-server-86d5b648f9-
  labels:
    app.kubernetes.io/name: argocd-server
    bcdr-candidate: t
    by-squad: mcsp-argocd
    component-name: argocd-resource
    for-product: all
    pod-template-hash: 86d5b648f9
  name: argocd-server-86d5b648f9-c7757
  namespace: argocd-worker
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: argocd-server-86d5b648f9
    uid: cf2e79b7-fbd1-4ed3-897d-8056bb85cde0
  resourceVersion: "175513568"
  uid: 3b0d6e7c-13fe-42f8-8cfd-9495c3aec43a
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: argocd-server
          topologyKey: topology.kubernetes.io/zone
        weight: 100
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: argocd-server
        topologyKey: kubernetes.io/hostname
  containers:
  - args:
    - /usr/local/bin/argocd-server
    - --insecure
    - --staticassets
    - /shared/app
    - --redis
    - argocd-redis-ha-haproxy:6379
    env:
    - name: ARGOCD_API_SERVER_REPLICAS
      value: "2"
    - name: ARGOCD_SERVER_INSECURE
      valueFrom:
        configMapKeyRef:
          key: server.insecure
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_BASEHREF
      valueFrom:
        configMapKeyRef:
          key: server.basehref
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_ROOTPATH
      valueFrom:
        configMapKeyRef:
          key: server.rootpath
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_LOGFORMAT
      valueFrom:
        configMapKeyRef:
          key: server.log.format
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_LOG_LEVEL
      valueFrom:
        configMapKeyRef:
          key: server.log.level
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_REPO_SERVER
      valueFrom:
        configMapKeyRef:
          key: repo.server
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_DEX_SERVER
      valueFrom:
        configMapKeyRef:
          key: server.dex.server
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_DISABLE_AUTH
      valueFrom:
        configMapKeyRef:
          key: server.disable.auth
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_ENABLE_GZIP
      valueFrom:
        configMapKeyRef:
          key: server.enable.gzip
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS
      valueFrom:
        configMapKeyRef:
          key: server.repo.server.timeout.seconds
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_X_FRAME_OPTIONS
      valueFrom:
        configMapKeyRef:
          key: server.x.frame.options
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_CONTENT_SECURITY_POLICY
      valueFrom:
        configMapKeyRef:
          key: server.content.security.policy
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_REPO_SERVER_PLAINTEXT
      valueFrom:
        configMapKeyRef:
          key: server.repo.server.plaintext
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_REPO_SERVER_STRICT_TLS
      valueFrom:
        configMapKeyRef:
          key: server.repo.server.strict.tls
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_DEX_SERVER_PLAINTEXT
      valueFrom:
        configMapKeyRef:
          key: server.dex.server.plaintext
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_DEX_SERVER_STRICT_TLS
      valueFrom:
        configMapKeyRef:
          key: server.dex.server.strict.tls
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_TLS_MIN_VERSION
      valueFrom:
        configMapKeyRef:
          key: server.tls.minversion
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_TLS_MAX_VERSION
      valueFrom:
        configMapKeyRef:
          key: server.tls.maxversion
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_TLS_CIPHERS
      valueFrom:
        configMapKeyRef:
          key: server.tls.ciphers
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION
      valueFrom:
        configMapKeyRef:
          key: server.connection.status.cache.expiration
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_OIDC_CACHE_EXPIRATION
      valueFrom:
        configMapKeyRef:
          key: server.oidc.cache.expiration
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION
      valueFrom:
        configMapKeyRef:
          key: server.login.attempts.expiration
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_STATIC_ASSETS
      valueFrom:
        configMapKeyRef:
          key: server.staticassets
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
      valueFrom:
        configMapKeyRef:
          key: server.app.state.cache.expiration
          name: argocd-cmd-params-cm
          optional: true
    - name: REDIS_SERVER
      valueFrom:
        configMapKeyRef:
          key: redis.server
          name: argocd-cmd-params-cm
          optional: true
    - name: REDIS_COMPRESSION
      valueFrom:
        configMapKeyRef:
          key: redis.compression
          name: argocd-cmd-params-cm
          optional: true
    - name: REDISDB
      valueFrom:
        configMapKeyRef:
          key: redis.db
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
      valueFrom:
        configMapKeyRef:
          key: server.default.cache.expiration
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_MAX_COOKIE_NUMBER
      valueFrom:
        configMapKeyRef:
          key: server.http.cookie.maxnumber
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_LISTEN_ADDRESS
      valueFrom:
        configMapKeyRef:
          key: server.listen.address
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_METRICS_LISTEN_ADDRESS
      valueFrom:
        configMapKeyRef:
          key: server.metrics.listen.address
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_OTLP_ADDRESS
      valueFrom:
        configMapKeyRef:
          key: otlp.address
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_OTLP_INSECURE
      valueFrom:
        configMapKeyRef:
          key: otlp.insecure
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_OTLP_HEADERS
      valueFrom:
        configMapKeyRef:
          key: otlp.headers
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_APPLICATION_NAMESPACES
      valueFrom:
        configMapKeyRef:
          key: application.namespaces
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_SERVER_ENABLE_PROXY_EXTENSION
      valueFrom:
        configMapKeyRef:
          key: server.enable.proxy.extension
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_K8SCLIENT_RETRY_MAX
      valueFrom:
        configMapKeyRef:
          key: server.k8sclient.retry.max
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF
      valueFrom:
        configMapKeyRef:
          key: server.k8sclient.retry.base.backoff
          name: argocd-cmd-params-cm
          optional: true
    - name: ARGOCD_API_CONTENT_TYPES
      valueFrom:
        configMapKeyRef:
          key: server.api.content.types
          name: argocd-cmd-params-cm
          optional: true
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imagePullPolicy: Always
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz?full=true
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 3
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 5
    name: argocd-server
    ports:
    - containerPort: 8080
      protocol: TCP
    - containerPort: 8083
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 3
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        cpu: "3"
        memory: 3Gi
      requests:
        cpu: "1"
        memory: 1Gi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000720000
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /tmp/extensions/
      name: extensions
    - mountPath: /app/config/ssh
      name: ssh-known-hosts
    - mountPath: /app/config/tls
      name: tls-certs
    - mountPath: /app/config/server/tls
      name: argocd-repo-server-tls
    - mountPath: /app/config/dex/tls
      name: argocd-dex-server-tls
    - mountPath: /home/argocd
      name: plugins-home
    - mountPath: /tmp
      name: tmp
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-v2zg9
      readOnly: true
  - image: icr.io/automation-saas-platform/cicd/argocd-extensions:20240305080741-main-eeba7369f59822b087fba460faeb02020fbde157
    imagePullPolicy: Always
    name: argocd-extensions
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1000720000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /tmp/extensions/
      name: extensions
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-v2zg9
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: argocd-icr-ips
  nodeName: 192.168.34.29
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000720000
    seLinuxOptions:
      level: s0:c27,c9
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: argocd-server
  serviceAccountName: argocd-server
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - emptyDir: {}
    name: extensions
  - emptyDir: {}
    name: plugins-home
  - emptyDir: {}
    name: tmp
  - configMap:
      defaultMode: 420
      name: argocd-ssh-known-hosts-cm
    name: ssh-known-hosts
  - configMap:
      defaultMode: 420
      name: argocd-tls-certs-cm
    name: tls-certs
  - name: argocd-repo-server-tls
    secret:
      defaultMode: 420
      items:
      - key: tls.crt
        path: tls.crt
      - key: tls.key
        path: tls.key
      - key: ca.crt
        path: ca.crt
      optional: true
      secretName: argocd-repo-server-tls
  - name: argocd-dex-server-tls
    secret:
      defaultMode: 420
      items:
      - key: tls.crt
        path: tls.crt
      - key: ca.crt
        path: ca.crt
      optional: true
      secretName: argocd-dex-server-tls
  - name: kube-api-access-v2zg9
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T14:15:08Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T14:19:53Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T14:19:53Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T14:15:07Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://fb15e9237c85664b57470fa97f4f13aec28294901c9ee02d1d3c14fa29c5e535
    image: icr.io/automation-saas-platform/cicd/argocd-extensions:20240305080741-main-eeba7369f59822b087fba460faeb02020fbde157
    imageID: icr.io/automation-saas-platform/cicd/argocd-extensions@sha256:e7a513f4fb9122878ff988af51972e796725e8c331f5a57b0d8195e14c9582ff
    lastState: {}
    name: argocd-extensions
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T14:19:53Z"
  - containerID: cri-o://cf8060e29b8f76cfd2b0a4c8d8ce8060746c7075ad921b2082ff5a0c9281ab5c
    image: icr.io/automation-saas-platform/cicd/argo-cd:20240507163154-main-c723a5a2b64a7f60bd5e635509e6fd50456fd7f0
    imageID: icr.io/automation-saas-platform/cicd/argo-cd@sha256:3fa390157bc0adbaad25680a4eddd11c27bed55a39c5e0570f41289e681fcf61
    lastState: {}
    name: argocd-server
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T14:18:43Z"
  hostIP: 192.168.34.29
  phase: Running
  podIP: 172.21.126.210
  podIPs:
  - ip: 172.21.126.210
  qosClass: Burstable
  startTime: "2024-06-11T14:15:08Z"
