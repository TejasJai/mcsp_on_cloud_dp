apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/containerID: 6830fab3d099e65fdbe0745db26c214744e5ce978cd47eb471b445f885602169
    cni.projectcalico.org/podIP: 172.21.137.23/32
    cni.projectcalico.org/podIPs: 172.21.137.23/32
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "k8s-pod-network",
          "ips": [
              "172.21.137.23"
          ],
          "default": true,
          "dns": {}
      }]
    kubectl.kubernetes.io/restartedAt: "2024-06-13T12:28:21+05:30"
    openshift.io/scc: restricted-v2
    prometheus.io/path: /metrics
    prometheus.io/port: "9443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2024-06-13T06:58:22Z"
  generateName: common-service-broker-79678f6c64-
  labels:
    app: common-service-broker
    by-squad: mcsp-csb
    for-product: all
    pod-template-hash: 79678f6c64
  name: common-service-broker-79678f6c64-8hjwb
  namespace: common-service-broker
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: common-service-broker-79678f6c64
    uid: 3951cd97-a3a9-495c-90c8-6152a8db8452
  resourceVersion: "180929876"
  uid: fd4d3117-bcfc-440b-b9f4-998350114a94
spec:
  containers:
  - env:
    - name: KUBE_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: CROSS_REGION_ENABLED
      value: "true"
    - name: CROSS_REGION_LOCAL
      value: us-east
    - name: CROSS_REGION_ALLOWED_REGIONS
    image: icr.io/automation-saas-platform/csb/common-service-broker:20240521193104-main-d23c225335907845fff928f53145b841cd2b613b
    imagePullPolicy: Always
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /probe/liveness
        port: internal
        scheme: HTTPS
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: common-service-broker
    ports:
    - containerPort: 9443
      name: internal
      protocol: TCP
    - containerPort: 8443
      name: https
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /probe/readiness
        port: internal
        scheme: HTTPS
      initialDelaySeconds: 7
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources:
      limits:
        cpu: "4"
        memory: 4Gi
      requests:
        cpu: "1"
        memory: 1Gi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
        - all
      privileged: false
      readOnlyRootFilesystem: true
      runAsUser: 1000730000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /home/app/https-tls-config
      name: tls-creds
      readOnly: true
    - mountPath: /home/app/broker-config
      name: broker-config
      readOnly: true
    - mountPath: /home/app/mtls/client-certificate
      name: csb-client-cert
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-hrrf2
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: ap-global-registry
  nodeName: 192.168.33.28
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000730000
    runAsNonRoot: true
    seLinuxOptions:
      level: s0:c27,c14
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: csb
  serviceAccountName: csb
  terminationGracePeriodSeconds: 10
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: tls-creds
    secret:
      defaultMode: 420
      secretName: csb-server-tls
  - name: csb-client-cert
    secret:
      defaultMode: 420
      secretName: csb-client-cert
  - name: broker-config
    secret:
      defaultMode: 420
      secretName: csb-config
  - name: kube-api-access-hrrf2
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-06-13T06:58:22Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-06-13T06:58:42Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-06-13T06:58:42Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-06-13T06:58:22Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://4d4726e3901f19654950b9d8548b9c4cd4d724697a1f0d3f05f7454a94de4b5f
    image: icr.io/automation-saas-platform/csb/common-service-broker:20240521193104-main-d23c225335907845fff928f53145b841cd2b613b
    imageID: icr.io/automation-saas-platform/csb/common-service-broker@sha256:a30c97b56ab82ea9003e14d0a04c0732a4288c4d3bea1dbf09d561d7097998a9
    lastState: {}
    name: common-service-broker
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-13T06:58:26Z"
  hostIP: 192.168.33.28
  phase: Running
  podIP: 172.21.137.23
  podIPs:
  - ip: 172.21.137.23
  qosClass: Burstable
  startTime: "2024-06-13T06:58:22Z"
